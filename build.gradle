buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'net.ltgt.apt' version '0.8'
    id 'war'
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'mario.battleship'
version = '0.2.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


bootWar {
    manifest {
        attributes(
                'Build-Version': version,
                'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
    archiveName 'battleship-api.war'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.webjars:webjars-locator-core")
    compile("org.webjars:sockjs-client:1.0.2")
    
    runtime('org.springframework.boot:spring-boot-devtools')

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    implementation('com.google.code.gson:gson:2.8.5')

    runtime('com.h2database:h2')
    runtime('org.postgresql:postgresql:42.1.4')

}

task buildDocker(type: Docker) {
    applicationName = "$project.name"
    dockerfile = "./src/docker/Dockerfile"
    push = project.hasProperty('push')
    tag = "ag04/mb-battleship-api"
}

task copyDockerFiles(type: Copy, dependsOn: build) {
    from "${projectDir}/src/docker" into "${buildDir}/docker"
    from "${buildDir}/libs/battleship-api.war" into "${buildDir}/docker"
}

buildDocker.dependsOn copyDockerFiles